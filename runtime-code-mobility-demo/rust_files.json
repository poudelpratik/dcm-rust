[
  {
    "absolute_filepath": "/home/cybernetics/Documents/Projects/University/thesis/rust-webassembly/actix-demo/src/test_data.rs",
    "relative_filepath": "src/test_data.rs",
    "main_module": {
      "name": null,
      "imports": [],
      "functions": [],
      "global_variables": [],
      "type_definitions": [],
      "inner_modules": []
    }
  },
  {
    "absolute_filepath": "/home/cybernetics/Documents/Projects/University/thesis/rust-webassembly/actix-demo/src/main.rs",
    "relative_filepath": "src/main.rs",
    "main_module": {
      "name": null,
      "imports": [],
      "functions": [
        {
          "name": "hello",
          "location": {
            "start_byte": 234,
            "start_line": 13,
            "start_column": 6,
            "end_byte": 310,
            "end_line": 15,
            "end_column": 1
          },
          "imports": [],
          "code": "fn hello() -> impl Responder {\n    HttpResponse::Ok().body(\"Hello world!\")\n}"
        },
        {
          "name": "main",
          "location": {
            "start_byte": 337,
            "start_line": 18,
            "start_column": 6,
            "end_byte": 724,
            "end_line": 31,
            "end_column": 1
          },
          "imports": [],
          "code": "fn main() -> std::io::Result<()> {\n    dotenv().ok();\n    let port = env::var(\"PORT\").unwrap_or(\"8080\".to_string()).parse::<u16>().unwrap();\n\n    HttpServer::new(|| {\n        App::new()\n            .configure(index_routes::init_routes)\n            .configure(user_routes::init_routes)\n            .service(hello)\n    })\n        .bind((\"127.0.0.1\", port))?\n        .run()\n        .await\n}"
        }
      ],
      "global_variables": [],
      "type_definitions": [],
      "inner_modules": []
    }
  },
  {
    "absolute_filepath": "/home/cybernetics/Documents/Projects/University/thesis/rust-webassembly/actix-demo/src/controllers/mod.rs",
    "relative_filepath": "src/controllers/mod.rs",
    "main_module": {
      "name": null,
      "imports": [],
      "functions": [],
      "global_variables": [],
      "type_definitions": [],
      "inner_modules": []
    }
  },
  {
    "absolute_filepath": "/home/cybernetics/Documents/Projects/University/thesis/rust-webassembly/actix-demo/src/controllers/user_controller.rs",
    "relative_filepath": "src/controllers/user_controller.rs",
    "main_module": {
      "name": null,
      "imports": [],
      "functions": [
        {
          "name": "get_user_by_id",
          "location": {
            "start_byte": 116,
            "start_line": 5,
            "start_column": 10,
            "end_byte": 407,
            "end_line": 14,
            "end_column": 1
          },
          "imports": [],
          "code": "fn get_user_by_id(path: web::Path<u64>) -> impl Responder {\n    let id = path.into_inner();\n    let user = User {\n        id,\n        username: \"user1\".to_string(),\n        password: \"test1\".to_string()\n    };\n\n    HttpResponse::Ok().json(user) // Use .json() to serialize the data as JSON\n}"
        },
        {
          "name": "get_users",
          "location": {
            "start_byte": 436,
            "start_line": 17,
            "start_column": 10,
            "end_byte": 837,
            "end_line": 31,
            "end_column": 1
          },
          "imports": [],
          "code": "fn get_users() -> impl Responder {\n    let users = vec![\n        User {\n            id: 1,\n            username: \"user1\".to_string(),\n            password: \"test1\".to_string()\n        },\n        User {\n            id: 2,\n            username: \"user2\".to_string(),\n            password: \"test2\".to_string()\n        }] ;\n\n    HttpResponse::Ok().json(users) // Use .json() to serialize the data as JSON\n}"
        }
      ],
      "global_variables": [],
      "type_definitions": [],
      "inner_modules": []
    }
  },
  {
    "absolute_filepath": "/home/cybernetics/Documents/Projects/University/thesis/rust-webassembly/actix-demo/src/controllers/index_controller.rs",
    "relative_filepath": "src/controllers/index_controller.rs",
    "main_module": {
      "name": null,
      "imports": [],
      "functions": [
        {
          "name": "index",
          "location": {
            "start_byte": 70,
            "start_line": 4,
            "start_column": 10,
            "end_byte": 261,
            "end_line": 9,
            "end_column": 1
          },
          "imports": [],
          "code": "fn index() -> impl Responder {\n    // Return the contents as an HTML response\n    HttpResponse::Ok()\n        .content_type(\"text/html\")\n        .body(include_str!(\"../frontend/index.html\"))\n}"
        }
      ],
      "global_variables": [],
      "type_definitions": [],
      "inner_modules": []
    }
  },
  {
    "absolute_filepath": "/home/cybernetics/Documents/Projects/University/thesis/rust-webassembly/actix-demo/src/routes/user_routes.rs",
    "relative_filepath": "src/routes/user_routes.rs",
    "main_module": {
      "name": null,
      "imports": [],
      "functions": [
        {
          "name": "init_routes",
          "location": {
            "start_byte": 67,
            "start_line": 5,
            "start_column": 4,
            "end_byte": 210,
            "end_line": 8,
            "end_column": 1
          },
          "imports": [],
          "code": "fn init_routes(cfg: &mut web::ServiceConfig) {\n    cfg.service(user_controller::get_users)\n        .service(user_controller::get_user_by_id);\n}"
        }
      ],
      "global_variables": [],
      "type_definitions": [],
      "inner_modules": []
    }
  },
  {
    "absolute_filepath": "/home/cybernetics/Documents/Projects/University/thesis/rust-webassembly/actix-demo/src/routes/mod.rs",
    "relative_filepath": "src/routes/mod.rs",
    "main_module": {
      "name": null,
      "imports": [],
      "functions": [],
      "global_variables": [],
      "type_definitions": [],
      "inner_modules": []
    }
  },
  {
    "absolute_filepath": "/home/cybernetics/Documents/Projects/University/thesis/rust-webassembly/actix-demo/src/routes/index_routes.rs",
    "relative_filepath": "src/routes/index_routes.rs",
    "main_module": {
      "name": null,
      "imports": [],
      "functions": [
        {
          "name": "init_routes",
          "location": {
            "start_byte": 68,
            "start_line": 5,
            "start_column": 4,
            "end_byte": 158,
            "end_line": 7,
            "end_column": 1
          },
          "imports": [],
          "code": "fn init_routes(cfg: &mut web::ServiceConfig) {\n    cfg.service(index_controller::index);\n}"
        }
      ],
      "global_variables": [],
      "type_definitions": [],
      "inner_modules": []
    }
  },
  {
    "absolute_filepath": "/home/cybernetics/Documents/Projects/University/thesis/rust-webassembly/actix-demo/src/shared/playground2.rs",
    "relative_filepath": "src/shared/playground2.rs",
    "main_module": {
      "name": null,
      "imports": [],
      "functions": [
        {
          "name": "multiply",
          "location": {
            "start_byte": 111,
            "start_line": 8,
            "start_column": 4,
            "end_byte": 159,
            "end_line": 10,
            "end_column": 1
          },
          "imports": [],
          "code": "fn multiply(a: i32, b: i32) -> i32 {\n    a * b\n}"
        },
        {
          "name": "add_to_random_number",
          "location": {
            "start_byte": 165,
            "start_line": 12,
            "start_column": 4,
            "end_byte": 283,
            "end_line": 15,
            "end_column": 1
          },
          "imports": [],
          "code": "fn add_to_random_number(a: i32) -> i32 {\n    let random_number = generate_random_number();\n    add(a, random_number)\n}"
        }
      ],
      "global_variables": [],
      "type_definitions": [],
      "inner_modules": [
        {
          "name": "test",
          "imports": [],
          "functions": [
            {
              "name": "add_to_random_number",
              "location": {
                "start_byte": 370,
                "start_line": 20,
                "start_column": 8,
                "end_byte": 500,
                "end_line": 23,
                "end_column": 5
              },
              "imports": [],
              "code": "fn add_to_random_number(a: i32) -> i32 {\n        let random_number = generate_random_number();\n        add(a, random_number)\n    }"
            }
          ],
          "global_variables": [],
          "type_definitions": [],
          "inner_modules": []
        }
      ]
    }
  },
  {
    "absolute_filepath": "/home/cybernetics/Documents/Projects/University/thesis/rust-webassembly/actix-demo/src/shared/playground3.rs",
    "relative_filepath": "src/shared/playground3.rs",
    "main_module": {
      "name": null,
      "imports": [],
      "functions": [
        {
          "name": "generate_random_number",
          "location": {
            "start_byte": 77,
            "start_line": 7,
            "start_column": 4,
            "end_byte": 139,
            "end_line": 9,
            "end_column": 1
          },
          "imports": [],
          "code": "fn generate_random_number() -> f64 {\n    unsafe { random() }\n}"
        },
        {
          "name": "main",
          "location": {
            "start_byte": 145,
            "start_line": 11,
            "start_column": 4,
            "end_byte": 156,
            "end_line": 11,
            "end_column": 15
          },
          "imports": [],
          "code": "fn main(){}"
        }
      ],
      "global_variables": [],
      "type_definitions": [],
      "inner_modules": []
    }
  },
  {
    "absolute_filepath": "/home/cybernetics/Documents/Projects/University/thesis/rust-webassembly/actix-demo/src/shared/playground.rs",
    "relative_filepath": "src/shared/playground.rs",
    "main_module": {
      "name": null,
      "imports": [],
      "functions": [
        {
          "name": "add",
          "location": {
            "start_byte": 20,
            "start_line": 3,
            "start_column": 4,
            "end_byte": 63,
            "end_line": 5,
            "end_column": 1
          },
          "imports": [],
          "code": "fn add(a: i32, b: i32) -> i32 {\n    a + b\n}"
        },
        {
          "name": "generate_random_number",
          "location": {
            "start_byte": 112,
            "start_line": 12,
            "start_column": 4,
            "end_byte": 192,
            "end_line": 14,
            "end_column": 1
          },
          "imports": [],
          "code": "fn generate_random_number() -> i32 {\n    rand::thread_rng().gen_range(1..=100)\n}"
        }
      ],
      "global_variables": [],
      "type_definitions": [],
      "inner_modules": [
        {
          "name": "test",
          "imports": [],
          "functions": [
            {
              "name": "say_hello",
              "location": {
                "start_byte": 213,
                "start_line": 17,
                "start_column": 8,
                "end_byte": 288,
                "end_line": 19,
                "end_column": 5
              },
              "imports": [],
              "code": "fn say_hello(){\n        println!(\"{}\", \"Hello from Test\".to_string())\n    }"
            }
          ],
          "global_variables": [],
          "type_definitions": [],
          "inner_modules": []
        }
      ]
    }
  },
  {
    "absolute_filepath": "/home/cybernetics/Documents/Projects/University/thesis/rust-webassembly/actix-demo/src/shared/mod.rs",
    "relative_filepath": "src/shared/mod.rs",
    "main_module": {
      "name": null,
      "imports": [],
      "functions": [],
      "global_variables": [],
      "type_definitions": [],
      "inner_modules": []
    }
  },
  {
    "absolute_filepath": "/home/cybernetics/Documents/Projects/University/thesis/rust-webassembly/actix-demo/src/models/mod.rs",
    "relative_filepath": "src/models/mod.rs",
    "main_module": {
      "name": null,
      "imports": [],
      "functions": [],
      "global_variables": [],
      "type_definitions": [],
      "inner_modules": []
    }
  },
  {
    "absolute_filepath": "/home/cybernetics/Documents/Projects/University/thesis/rust-webassembly/actix-demo/src/models/user.rs",
    "relative_filepath": "src/models/user.rs",
    "main_module": {
      "name": null,
      "imports": [],
      "functions": [],
      "global_variables": [],
      "type_definitions": [],
      "inner_modules": []
    }
  }
]
